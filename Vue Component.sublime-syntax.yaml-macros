%YAML 1.2
%TAG ! tag:yaml-macros:src.macros:
---
extends: Packages/HTML/HTML.sublime-syntax
name: Vue Component
version: 2
scope: text.html.vue
file_extensions:
  - vue

contexts:
  main:
    - meta_prepend: true
    - include: template-tag
    - include: mustache-expression

  mustache-expression:
    - match: '(?={{)'
      set:
        - meta_scope: meta.template.vue
        - match: '{{'
          scope: punctuation.definition.template.begin.html
          embed: scope:source.js
          embed_scope: source.js.embedded.vue
          escape: '}}'
          escape_captures:
            0: meta.template.vue punctuation.definition.template.end.html
        - match: ''
          pop: true

  tag-attributes:
    - meta_prepend: true
    - include: vue-directive

  template-tag:
    - match: (<)((?i:template)){{tag_name_break}}
      captures:
        0: meta.tag.template.begin.html
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.template.html
      push: template-mustache

  vue-directive:
    - match: (?=v-)
      push:
        - vue-directive-assignment
        - tag-generic-attribute-name
    - match: (?::|@)
      scope: punctuation.definition.attribute.html
      push:
        - vue-directive-assignment
        - tag-generic-attribute-name

  vue-directive-assignment:
    - match: '='
      scope: punctuation.separator.key-value.html
      set: vue-directive-value
    - include: else-pop

  vue-directive-value:
    - match: '"'
      scope:
        meta.string.html string.quoted.double.html
        punctuation.definition.string.begin.html
      embed: scope:source.js
      pop: true
      embed_scope: meta.string.html source.js.embedded.vue
      escape: '"'
      escape_captures:
        0:
          meta.string.html string.quoted.double.html
          punctuation.definition.string.end.html
    - match: "'"
      scope:
        meta.string.html string.quoted.single.html
        punctuation.definition.string.begin.html
      embed: scope:source.js
      pop: true
      embed_scope: meta.string.html source.js.embedded.vue
      escape: "'"
      escape_captures:
        0:
          meta.string.html string.quoted.single.html
          punctuation.definition.string.end.html

    - include: else-pop

  style-common:
    - meta_prepend: true
    - include: style-lang-attribute

  style-lang-attribute:
    - match: (?i:lang){{attribute_name_break}}
      scope: meta.attribute-with-value.html entity.other.attribute-name.html
      set:
        - meta_content_scope: meta.tag.style.begin.html meta.attribute-with-value.html
        - match: =
          scope: punctuation.separator.key-value.html
          set:
            - meta_content_scope: meta.tag.style.begin.html meta.attribute-with-value.html
            - include: style-lang-decider
        - match: (?=\S)
          set: style-css

  style-lang-decider:
    - !style_language [ sass, source.sass ]
    - !style_language [ scss, source.scss ]
    - !style_language [ stylus, source.stylus ]
    - !style_language [ postcss\?parser=sugarss, source.sss ]
    - !style_language [ postcss, source.postcss ]
    - !style_language [ less, source.less ]
    - match: (?=\S)
      set:
        - style-css
        - tag-generic-attribute-meta
        - tag-generic-attribute-value

  script-common:
    - meta_prepend: true
    - include: script-lang-attribute

  script-javascript-content:
    - match: (?=\S)
      embed: scope:source.js
      embed_scope: source.js.embedded.html
      escape: '{{script_close_lookahead}}'

  script-lang-attribute:
    - match: (?i:lang){{attribute_name_break}}
      scope: meta.attribute-with-value.html entity.other.attribute-name.html
      set:
        - meta_content_scope: meta.tag.script.begin.html meta.attribute-with-value.html
        - match: =
          scope: punctuation.separator.key-value.html
          set:
            - meta_content_scope: meta.tag.script.begin.html meta.attribute-with-value.html
            - include: script-lang-decider
        - match: (?=\S)
          set: script-javascript

  script-lang-decider:
    - !script_language [ coffee, source.coffee ]
    - !script_language [ livescript, source.livescript ]
    - !script_language [ ts, source.ts ]
    - match: (?=\S)
      set:
        - script-javascript
        - tag-generic-attribute-meta
        - tag-generic-attribute-value

  template-common:
    - include: template-lang-attribute
    - include: tag-attributes
    - match: '/>'
      scope: punctuation.definition.tag.end.html
      pop: true

  template-close-tag:
    - match: (</)((?i:template))(>)
      scope: meta.tag.template.end.html
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.template.html
        3: punctuation.definition.tag.end.html
      pop: true

  template-mustache:
    - meta_content_scope: meta.tag.template.begin.html
    - include: template-common
    - match: '>'
      scope: punctuation.definition.tag.end.html
      set:
        - include: template-close-tag
        - match: ''
          push: main

  template-lang-attribute:
    - match: (?i:lang){{attribute_name_break}}
      scope: meta.attribute-with-value.html entity.other.attribute-name.html
      set:
        - meta_content_scope: meta.tag.template.begin.html meta.attribute-with-value.html
        - match: =
          scope: punctuation.separator.key-value.html
          set:
            - meta_content_scope: meta.tag.template.begin.html meta.attribute-with-value.html
            - include: template-lang-decider
        - match: (?=\S)
          set: template-mustache

  template-lang-decider:
    - !template_language [ jade, text.jade ]
    - !template_language [ pug, text.pug ]
    - !template_language [ slm, text.slm ]
    - match: (?=\S)
      set:
        - template-mustache
        - tag-generic-attribute-meta
        - tag-generic-attribute-value
